package Methods;

import java.util.Scanner;

public class PasswordValidator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //•	6 – 10 characters (inclusive);
        //•	Consists only of letters and digits;
        //•	Have at least 2 digits.
        String password = scanner.nextLine();
        // проверка за дължината на паролата -> тя може да е валидна или невалидна [6-10]
        // проверка за съдържанието -> само букви и цифри
        // проверка за брой на цифри -> мин 2
        boolean isValidLength = isValid (password); // true, Когато паролата е валидна спрямо дължина
        if (!isValidLength){
            System.out.println("Password must be between 6 and 10 characters");
        }
        boolean isValidCount = isValidContent (password); // true, Когато паролата е валидна спрямо съдържание
        if (!isValidCount){
            System.out.println("Password must consist only of letters and digits");
        }
        boolean isValidDigits = isValidCountDigits (password);// // true, Когато паролата е валидна спрямо брой цифрти
        if (!isValidDigits){
            System.out.println("Password must have at least 2 digits");
        }
        if (isValidLength&&isValidCount&&isValidDigits){
            System.out.println("Password is valid");
        }
    }

    // метод за валидиране на дължината -> true (дължината е валидна)
    // /false (дължината е невалидна) -> boolean метод
    private static boolean isValid(String password) {
        // валидна, ако дължината е >=6 && дължината е <=10
        if (password.length() >= 6 && password.length() <= 10) {
            return true;
        } else {
            return false;
        }
        // return password.length() >= 6 && password.length() <= 10 (за да си спестя проврките)
    }

    // метода за валидиране на съдържанието -> true, ако паролата е валидна или false, ако паролата е невалидна
    private static boolean isValidContent(String password) {
        // за да е валидна всички символи трябва да са буква или цифра
        // трябва да обхождам всички символи и ако някой от тях не е буква или цифра -> false 

        for (char symbol : password.toCharArray()) {
            // с foreach мога да обходя паролата, ако първо я превърна
            // в масив от символи - директно в цикъла password.toCharArray() и обхождам всеки един символ
            if (!Character.isLetterOrDigit(symbol)) {
                return false;
            }
        }
        // тук е целият метод true
        return true;
    }
    // метод за валидиране на брой на цифрите -> паролата е валидна, ако броят е >= 2
    // да броя цифрите и да определя дали паролата е валидна

    private static boolean isValidCountDigits (String password){
        // true, ако digits>=2
        // false, ако е <

        int count = 0;
        // обхождам всеки един символ
        for (char symbol:password.toCharArray()) {
            //и правя проверка дали е цифа, ако е цифра, броя
            if (Character.isDigit(symbol)){
                count++;
            }
            // нова проверка по броя символи

            }
        if (count>=2){
            return true;
        } else {
            return false;
        }
    }


}
